plot(bias_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.2,0.2),xlab="G-E odds ratio",main="Bias")
lines(bias_cml~seq(0.9,1.1,by=0.01),col=2)
lines(bias_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01, xpd=TRUE)
## Variance
plot(var_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.006),xlab="G-E odds ratio",main="Variance")
lines(var_cml~seq(0.9,1.1,by=0.01),col=2)
lines(var_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## MSE
MSE_uml=var_uml+bias_uml^2
MSE_cml=var_cml+bias_cml^2
MSE_eb=var_eb+bias_eb^2
plot(MSE_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.02),xlab="G-E odds ratio",main="MSE")
lines(MSE_cml~seq(0.9,1.1,by=0.01),col=2)
lines(MSE_eb~seq(0.9,1.1,by=0.01),col=3)
legend("topleft", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
par(mfrow=c(1,3),mar=c(4,2,4,3),pin=c(1.8,1.8),cex=0.6)
## Bias
plot(bias_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.2,0.2),xlab="G-E odds ratio",main="Bias")
lines(bias_cml~seq(0.9,1.1,by=0.01),col=2)
lines(bias_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01, xpd=TRUE)
## Variance
plot(var_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.006),xlab="G-E odds ratio",main="Variance")
lines(var_cml~seq(0.9,1.1,by=0.01),col=2)
lines(var_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## MSE
MSE_uml=var_uml+bias_uml^2
MSE_cml=var_cml+bias_cml^2
MSE_eb=var_eb+bias_eb^2
plot(MSE_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.02),xlab="G-E odds ratio",main="MSE")
lines(MSE_cml~seq(0.9,1.1,by=0.01),col=2)
lines(MSE_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
par(mfrow=c(1,3),mar=c(4,2,4,3),pin=c(1.8,1.8),cex=0.6)
## Bias
plot(bias_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.2,0.2),xlab="G-E odds ratio",main="Bias")
lines(bias_cml~seq(0.9,1.1,by=0.01),col=2)
lines(bias_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## Variance
plot(var_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.006),xlab="G-E odds ratio",main="Variance")
lines(var_cml~seq(0.9,1.1,by=0.01),col=2)
lines(var_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## MSE
MSE_uml=var_uml+bias_uml^2
MSE_cml=var_cml+bias_cml^2
MSE_eb=var_eb+bias_eb^2
plot(MSE_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.02),xlab="G-E odds ratio",main="MSE")
lines(MSE_cml~seq(0.9,1.1,by=0.01),col=2)
lines(MSE_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
par(mfrow=c(1,3),mar=c(4,2,4,3),pin=c(1.8,1.8),cex=0.6)
## Bias
plot(bias_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.2,0.2),xlab="G-E odds ratio",main="Bias")
lines(bias_cml~seq(0.9,1.1,by=0.01),col=2)
lines(bias_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## Variance
plot(var_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.006),xlab="G-E odds ratio",main="Variance")
lines(var_cml~seq(0.9,1.1,by=0.01),col=2)
lines(var_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## MSE
MSE_uml=var_uml+bias_uml^2
MSE_cml=var_cml+bias_cml^2
MSE_eb=var_eb+bias_eb^2
plot(MSE_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.01,0.02),xlab="G-E odds ratio",main="MSE")
lines(MSE_cml~seq(0.9,1.1,by=0.01),col=2)
lines(MSE_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
par(mfrow=c(1,3),mar=c(4,2,4,3),pin=c(1.8,1.8),cex=0.6)
## Bias
plot(bias_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.2,0.2),xlab="G-E odds ratio",main="Bias")
lines(bias_cml~seq(0.9,1.1,by=0.01),col=2)
lines(bias_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## Variance
plot(var_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.006),xlab="G-E odds ratio",main="Variance")
lines(var_cml~seq(0.9,1.1,by=0.01),col=2)
lines(var_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## MSE
MSE_uml=var_uml+bias_uml^2
MSE_cml=var_cml+bias_cml^2
MSE_eb=var_eb+bias_eb^2
plot(MSE_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.005,0.02),xlab="G-E odds ratio",main="MSE")
lines(MSE_cml~seq(0.9,1.1,by=0.01),col=2)
lines(MSE_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
par(mfrow=c(1,3),mar=c(4,2,4,3),pin=c(1.8,1.8),cex=0.6)
## Bias
plot(bias_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.2,0.2),xlab="G-E odds ratio",main="Bias")
lines(bias_cml~seq(0.9,1.1,by=0.01),col=2)
lines(bias_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## Variance
plot(var_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.006),xlab="G-E odds ratio",main="Variance")
lines(var_cml~seq(0.9,1.1,by=0.01),col=2)
lines(var_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## MSE
MSE_uml=var_uml+bias_uml^2
MSE_cml=var_cml+bias_cml^2
MSE_eb=var_eb+bias_eb^2
plot(MSE_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.02),xlab="G-E odds ratio",main="MSE")
lines(MSE_cml~seq(0.9,1.1,by=0.01),col=2)
lines(MSE_eb~seq(0.9,1.1,by=0.01),col=3)
legend("bottomright", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
par(mfrow=c(1,3),mar=c(4,2,4,3),pin=c(1.8,1.8),cex=0.6)
## Bias
plot(bias_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(-0.2,0.2),xlab="G-E odds ratio",main="Bias")
lines(bias_cml~seq(0.9,1.1,by=0.01),col=2)
lines(bias_eb~seq(0.9,1.1,by=0.01),col=3)
legend("topleft", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## Variance
plot(var_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.006),xlab="G-E odds ratio",main="Variance")
lines(var_cml~seq(0.9,1.1,by=0.01),col=2)
lines(var_eb~seq(0.9,1.1,by=0.01),col=3)
legend("topleft", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
## MSE
MSE_uml=var_uml+bias_uml^2
MSE_cml=var_cml+bias_cml^2
MSE_eb=var_eb+bias_eb^2
plot(MSE_uml~seq(0.9,1.1,by=0.01),type='l',ylim=c(0,0.02),xlab="G-E odds ratio",main="MSE")
lines(MSE_cml~seq(0.9,1.1,by=0.01),col=2)
lines(MSE_eb~seq(0.9,1.1,by=0.01),col=3)
legend("topleft", legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,cex=0.8,xpd=TRUE)
MORG=1.2;MORE=1.5;pE=0.3;pG=0.15;RERI=0
N0=50000;N1=50000;n=2000
power_uml=c()
power_cml=c()
power_eb=c()
for (EXPTHETA in seq(0.9,1.1,by=0.01)){
dat=gen_data(pE,pG,EXPTHETA,MORG,MORE,RERI,N0,N1,n)
rejuml=rep(0,n);rejcml=rep(0,n);rejeb=rep(0,n)
for(k in 1:n){
r01=dat$sim0[1,k]
r02=dat$sim0[2,k]
r03=dat$sim0[3,k]
r04=dat$sim0[4,k]
r11=dat$sim1[1,k]
r12=dat$sim1[2,k]
r13=dat$sim1[3,k]
r14=dat$sim1[4,k]
temp_uml=add.uml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_cml=add.cml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_eb=add.eb(r01,r02,r03,r04,r11,r12,r13,r14)
rejuml[k]=abs(temp_uml$reri/temp_uml$sd)>1.96
rejcml[k]=abs(temp_cml$reri/temp_cml$sd)>1.96
rejeb[k]=abs(temp_eb$reri/temp_eb$sd)>1.96
}
power_uml=c(power_uml,sum(rejuml)/n)
power_cml=c(power_cml,sum(rejcml)/n)
power_eb=c(power_eb,sum(rejeb)/n)
}
plot(power_uml~seq(0.9,1.1,by=0.01),type='l',lwd=2,xlab='G-E odds ratio',ylab='Type I Error')
lines(power_cml~seq(0.9,1.1,by=0.01),lty=1,col=2,lwd=2)
lines(power_eb~seq(0.9,1.1,by=0.01),lty=1,col=3,lwd=2)
legend("bottomright",legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,xpd=TRUE)
MORG=1.2;MORE=1.5;pE=0.3;pG=0.15;RERI=0
N0=50000;N1=50000;n=2000
power_uml=c()
power_cml=c()
power_eb=c()
for (EXPTHETA in seq(0.9,1.1,by=0.01)){
dat=gen_data(pE,pG,EXPTHETA,MORG,MORE,RERI,N0,N1,n)
rejuml=rep(0,n);rejcml=rep(0,n);rejeb=rep(0,n)
for(k in 1:n){
r01=dat$sim0[1,k]
r02=dat$sim0[2,k]
r03=dat$sim0[3,k]
r04=dat$sim0[4,k]
r11=dat$sim1[1,k]
r12=dat$sim1[2,k]
r13=dat$sim1[3,k]
r14=dat$sim1[4,k]
temp_uml=add.uml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_cml=add.cml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_eb=add.eb(r01,r02,r03,r04,r11,r12,r13,r14)
rejuml[k]=abs(temp_uml$reri/temp_uml$sd)>1.96
rejcml[k]=abs(temp_cml$reri/temp_cml$sd)>1.96
rejeb[k]=abs(temp_eb$reri/temp_eb$sd)>1.96
}
power_uml=c(power_uml,sum(rejuml)/n)
power_cml=c(power_cml,sum(rejcml)/n)
power_eb=c(power_eb,sum(rejeb)/n)
}
plot(power_uml~seq(0.9,1.1,by=0.01),type='l',lwd=2,xlab='G-E odds ratio',ylab='Type I Error',ylim=c(0.04,0.64))
lines(power_cml~seq(0.9,1.1,by=0.01),lty=1,col=2,lwd=2)
lines(power_eb~seq(0.9,1.1,by=0.01),lty=1,col=3,lwd=2)
legend("bottomright",legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,xpd=TRUE)
MORG=1.2;MORE=1.5;pE=0.3;pG=0.15;RERI=0
N0=50000;N1=50000;n=2000
power_uml=c()
power_cml=c()
power_eb=c()
for (EXPTHETA in seq(0.9,1.1,by=0.01)){
dat=gen_data(pE,pG,EXPTHETA,MORG,MORE,RERI,N0,N1,n)
rejuml=rep(0,n);rejcml=rep(0,n);rejeb=rep(0,n)
for(k in 1:n){
r01=dat$sim0[1,k]
r02=dat$sim0[2,k]
r03=dat$sim0[3,k]
r04=dat$sim0[4,k]
r11=dat$sim1[1,k]
r12=dat$sim1[2,k]
r13=dat$sim1[3,k]
r14=dat$sim1[4,k]
temp_uml=add.uml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_cml=add.cml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_eb=add.eb(r01,r02,r03,r04,r11,r12,r13,r14)
rejuml[k]=abs(temp_uml$reri/temp_uml$sd)>1.96
rejcml[k]=abs(temp_cml$reri/temp_cml$sd)>1.96
rejeb[k]=abs(temp_eb$reri/temp_eb$sd)>1.96
}
power_uml=c(power_uml,sum(rejuml)/n)
power_cml=c(power_cml,sum(rejcml)/n)
power_eb=c(power_eb,sum(rejeb)/n)
}
plot(power_uml~seq(0.9,1.1,by=0.01),type='l',lwd=2,xlab='G-E odds ratio',ylab='Type I Error',ylim=c(0,1))
lines(power_cml~seq(0.9,1.1,by=0.01),lty=1,col=2,lwd=2)
lines(power_eb~seq(0.9,1.1,by=0.01),lty=1,col=3,lwd=2)
legend("topright",legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,xpd=TRUE)
MORG=1.2;MORE=1.5;pE=0.3;pG=0.15;RERI=0
N0=50000;N1=50000;n=2000
power_uml=c()
power_cml=c()
power_eb=c()
for (EXPTHETA in seq(0.9,1.1,by=0.01)){
dat=gen_data(pE,pG,EXPTHETA,MORG,MORE,RERI,N0,N1,n)
rejuml=rep(0,n);rejcml=rep(0,n);rejeb=rep(0,n)
for(k in 1:n){
r01=dat$sim0[1,k]
r02=dat$sim0[2,k]
r03=dat$sim0[3,k]
r04=dat$sim0[4,k]
r11=dat$sim1[1,k]
r12=dat$sim1[2,k]
r13=dat$sim1[3,k]
r14=dat$sim1[4,k]
temp_uml=add.uml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_cml=add.cml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_eb=add.eb(r01,r02,r03,r04,r11,r12,r13,r14)
rejuml[k]=abs(temp_uml$reri/temp_uml$sd)>1.96
rejcml[k]=abs(temp_cml$reri/temp_cml$sd)>1.96
rejeb[k]=abs(temp_eb$reri/temp_eb$sd)>1.96
}
power_uml=c(power_uml,sum(rejuml)/n)
power_cml=c(power_cml,sum(rejcml)/n)
power_eb=c(power_eb,sum(rejeb)/n)
}
plot(power_uml~seq(0.9,1.1,by=0.01),type='l',lwd=2,xlab='G-E odds ratio',ylab='Type I Error',ylim=c(0,1))
lines(power_cml~seq(0.9,1.1,by=0.01),lty=1,col=2,lwd=2)
lines(power_eb~seq(0.9,1.1,by=0.01),lty=1,col=3,lwd=2)
legend("right",legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,xpd=TRUE)
par(mfrow=c(1,1),pin=c(3,3),cex=0.6)
MORG=1.2;MORE=1.5;pE=0.3;pG=0.15;RERI=0
N0=50000;N1=50000;n=2000
power_uml=c()
power_cml=c()
power_eb=c()
for (EXPTHETA in seq(0.9,1.1,by=0.01)){
dat=gen_data(pE,pG,EXPTHETA,MORG,MORE,RERI,N0,N1,n)
rejuml=rep(0,n);rejcml=rep(0,n);rejeb=rep(0,n)
for(k in 1:n){
r01=dat$sim0[1,k]
r02=dat$sim0[2,k]
r03=dat$sim0[3,k]
r04=dat$sim0[4,k]
r11=dat$sim1[1,k]
r12=dat$sim1[2,k]
r13=dat$sim1[3,k]
r14=dat$sim1[4,k]
temp_uml=add.uml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_cml=add.cml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_eb=add.eb(r01,r02,r03,r04,r11,r12,r13,r14)
rejuml[k]=abs(temp_uml$reri/temp_uml$sd)>1.96
rejcml[k]=abs(temp_cml$reri/temp_cml$sd)>1.96
rejeb[k]=abs(temp_eb$reri/temp_eb$sd)>1.96
}
power_uml=c(power_uml,sum(rejuml)/n)
power_cml=c(power_cml,sum(rejcml)/n)
power_eb=c(power_eb,sum(rejeb)/n)
}
plot(power_uml~seq(0.9,1.1,by=0.01),type='l',lwd=2,xlab='G-E odds ratio',ylab='Type I Error',ylim=c(0,1))
lines(power_cml~seq(0.9,1.1,by=0.01),lty=1,col=2,lwd=2)
lines(power_eb~seq(0.9,1.1,by=0.01),lty=1,col=3,lwd=2)
legend("right",legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,xpd=TRUE)
par(mfrow=c(1,1),pin=c(4,3),cex=0.6)
MORG=1.2;MORE=1.5;pE=0.3;pG=0.15;RERI=0
N0=50000;N1=50000;n=2000
power_uml=c()
power_cml=c()
power_eb=c()
for (EXPTHETA in seq(0.9,1.1,by=0.01)){
dat=gen_data(pE,pG,EXPTHETA,MORG,MORE,RERI,N0,N1,n)
rejuml=rep(0,n);rejcml=rep(0,n);rejeb=rep(0,n)
for(k in 1:n){
r01=dat$sim0[1,k]
r02=dat$sim0[2,k]
r03=dat$sim0[3,k]
r04=dat$sim0[4,k]
r11=dat$sim1[1,k]
r12=dat$sim1[2,k]
r13=dat$sim1[3,k]
r14=dat$sim1[4,k]
temp_uml=add.uml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_cml=add.cml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_eb=add.eb(r01,r02,r03,r04,r11,r12,r13,r14)
rejuml[k]=abs(temp_uml$reri/temp_uml$sd)>1.96
rejcml[k]=abs(temp_cml$reri/temp_cml$sd)>1.96
rejeb[k]=abs(temp_eb$reri/temp_eb$sd)>1.96
}
power_uml=c(power_uml,sum(rejuml)/n)
power_cml=c(power_cml,sum(rejcml)/n)
power_eb=c(power_eb,sum(rejeb)/n)
}
plot(power_uml~seq(0.9,1.1,by=0.01),type='l',lwd=2,xlab='G-E odds ratio',ylab='Type I Error',ylim=c(0,1))
lines(power_cml~seq(0.9,1.1,by=0.01),lty=1,col=2,lwd=2)
lines(power_eb~seq(0.9,1.1,by=0.01),lty=1,col=3,lwd=2)
legend("right",legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,xpd=TRUE)
par(mfrow=c(1,1),pin=c(4,3),cex=0.8)
MORG=1.2;MORE=1.5;pE=0.3;pG=0.15;RERI=0
N0=50000;N1=50000;n=2000
power_uml=c()
power_cml=c()
power_eb=c()
for (EXPTHETA in seq(0.9,1.1,by=0.01)){
dat=gen_data(pE,pG,EXPTHETA,MORG,MORE,RERI,N0,N1,n)
rejuml=rep(0,n);rejcml=rep(0,n);rejeb=rep(0,n)
for(k in 1:n){
r01=dat$sim0[1,k]
r02=dat$sim0[2,k]
r03=dat$sim0[3,k]
r04=dat$sim0[4,k]
r11=dat$sim1[1,k]
r12=dat$sim1[2,k]
r13=dat$sim1[3,k]
r14=dat$sim1[4,k]
temp_uml=add.uml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_cml=add.cml(r01,r02,r03,r04,r11,r12,r13,r14)
temp_eb=add.eb(r01,r02,r03,r04,r11,r12,r13,r14)
rejuml[k]=abs(temp_uml$reri/temp_uml$sd)>1.96
rejcml[k]=abs(temp_cml$reri/temp_cml$sd)>1.96
rejeb[k]=abs(temp_eb$reri/temp_eb$sd)>1.96
}
power_uml=c(power_uml,sum(rejuml)/n)
power_cml=c(power_cml,sum(rejcml)/n)
power_eb=c(power_eb,sum(rejeb)/n)
}
plot(power_uml~seq(0.9,1.1,by=0.01),type='l',lwd=2,xlab='G-E odds ratio',ylab='Type I Error',ylim=c(0,1))
lines(power_cml~seq(0.9,1.1,by=0.01),lty=1,col=2,lwd=2)
lines(power_eb~seq(0.9,1.1,by=0.01),lty=1,col=3,lwd=2)
legend("right",legend=c("UML","CML","EB"),lty=c(1,1,1),col=c(1,2,3),box.col="white",inset=0.01,xpd=TRUE)
119.807+6.983
119.807+16.066
119.807+25.327
((500056.713-496788.683)/2)/(1706852.18/4408)
df(0.95,2,4408)
qf(0.95,2,4408)
15/7
101325*(1 – 2.25577*10^-5*1700)^5.25588
101325*(1-2.25577*10^-5*1700)^5.25588
1*8.31441*284.15/82501.29
2/10^6/30*0.0286364*10^9
10.5-1.91
1.4*10^-4/0.082/298
log10(5000)
log10(5000)*0.82+0.14
10^(log10(5000)*0.82+0.14)
0.75*3+0.14
0.75*3+0.44
1489.9*0.03
1/(5.73*10^6)
1/(5.73*10^-6)
0.1*0.03*1489.9+0.1*0.97*44.7+500*5.73*10^(-6)+1
100/9.808
500*5.73*10^-6 /(0.1*0.03*1489.9+0.1*0.97*44.7+500*5.73*10^-6+1)
1/(0.1*0.03*1489.9+0.1*0.97*44.7+500*5.73*10^-6+1)
1-0.00029-0.10195
200*0.35/0.85
200*0.35/(0.85+3.6*0.85)
exp(-(82.35-17.90)/10)
exp(-(82.35-17.90)/10*log(1.6))
640*50/10^6
32*0.018
library(readr)
review <- read_csv("C:/Users/glius/Desktop/review.txt")
View(review)
review=as.vector(review)
View(review)
data=c(0,review[1:92,])
review=as.vector(review)
data=c(0,as.vector(review[1:92,1]))
review=as.vector(review)
data=c(0,as.vector(review[1:92,1]))
review=as.vector(review)
data=c(0,as.vector(review$0))
review=as.vector(review)
data=c(0,review$0)
data=c(0,review$'0')
t=data[seq(1,91,by=3)]
t=data[seq(1,91,by=3)]
outdoor=data[seq(2,92,by=3)]
indoor=data[seq(3,93,by=3)]
View(review)
fit1=lm(log(outdoor)~t)
summary(fit1)
fit2=lm(log(indoor)~t)
summary(fit2)
0.693/(3.213*10^-3)
0.693/(5.442*10^-4)=
0.693/(5.442*10^-4)
0.693/(5.442*10^-4)
library(bnstruct)
setwd("~/GitHub/MIT6.867/Data")
trainset = read.csv("train.csv",header=T)
install.packages("bnstruct")
library(bnstruct)
setwd("~/GitHub/MIT6.867/Data")
trainset = read.csv("train.csv",header=T)
trainset[trainset==-1]=NA
feature=trainset[,-c(1,2)]
id_target=trainset[,c(1,2)]
remove(trainset)
summary(feature)
cat_varname=c('ps_ind_02_cat','ps_ind_04_cat','ps_ind_05_cat','ps_ind_06_bin','ps_ind_07_bin',
'ps_ind_08_bin','ps_ind_09_bin','ps_ind_10_bin','ps_ind_11_bin','ps_ind_12_bin',
'ps_ind_13_bin','ps_ind_16_bin','ps_ind_17_bin','ps_ind_18_bin','ps_car_01_cat',
'ps_car_02_cat','ps_car_03_cat','ps_car_04_cat','ps_car_05_cat','ps_car_06_cat',
'ps_car_07_cat','ps_car_08_cat','ps_car_09_cat','ps_car_10_cat','ps_car_11_cat',
'ps_calc_15_bin','ps_calc_16_bin','ps_calc_17_bin','ps_calc_18_bin','ps_calc_19_bin',
'ps_calc_20_bin')
cat_index=match(cat_varname,colnames(feature))
feature=as.matrix(feature)
feature_impute=knn.impute(feature,k=5,cat.var=cat_index,to.impute=1:nrow(feature),using=1:nrow(feature))
data=feature[1:100,]
feature_impute=knn.impute(data,k=5,cat.var=cat_index,to.impute=1:nrow(data),using=1:nrow(data))
View(feature)
View(feature_impute)
data=feature[1:1000,]
feature_impute=knn.impute(data,k=5,cat.var=cat_index,to.impute=1:nrow(data),using=1:nrow(data))
data=feature[1:10000,]
feature_impute=knn.impute(data,k=5,cat.var=cat_index,to.impute=1:nrow(data),using=1:nrow(data))
set.seed(867)
feature_shuffle=feature[sample(1:nrow(feature),nrow(feature),replace=F),]
m=0
data=feature_shuffle[(m+1):min(m+10000,nrow(feature)),]
View(data)
set.seed(867)
feature_shuffle=feature[sample(1:nrow(feature),nrow(feature),replace=F),]
feature_impute=c()
N=10000
m=0
while (m<nrow(feature)){
data=feature_shuffle[(m+1):min(m+N,nrow(feature)),]
m=m+N
temp=knn.impute(data,k=5,cat.var=cat_index,to.impute=1:nrow(data),using=1:nrow(data))
feature_impute=rbind(feature_impute,temp)
}
library(bnstruct)
setwd("~/GitHub/MIT6.867/Data")
trainset = read.csv("train.csv",header=T)
trainset[trainset==-1]=NA
feature=trainset[,-c(1,2)]
id_target=trainset[,c(1,2)]
remove(trainset)
summary(feature)
cat_varname=c('ps_ind_02_cat','ps_ind_04_cat','ps_ind_05_cat','ps_ind_06_bin','ps_ind_07_bin',
'ps_ind_08_bin','ps_ind_09_bin','ps_ind_10_bin','ps_ind_11_bin','ps_ind_12_bin',
'ps_ind_13_bin','ps_ind_16_bin','ps_ind_17_bin','ps_ind_18_bin','ps_car_01_cat',
'ps_car_02_cat','ps_car_03_cat','ps_car_04_cat','ps_car_05_cat','ps_car_06_cat',
'ps_car_07_cat','ps_car_08_cat','ps_car_09_cat','ps_car_10_cat','ps_car_11_cat',
'ps_calc_15_bin','ps_calc_16_bin','ps_calc_17_bin','ps_calc_18_bin','ps_calc_19_bin',
'ps_calc_20_bin')
cat_index=match(cat_varname,colnames(feature))
feature=as.matrix(feature)
#feature_impute=knn.impute(feature,k=5,cat.var=cat_index,to.impute=1:nrow(feature),using=1:nrow(feature))
set.seed(867)
new_index=sample(1:nrow(feature),nrow(feature),replace=F)
feature_shuffle=feature[new_index,]
id_target_shuffle=id_target[new_index,]
feature_impute=c()
N=10000
m=0
while (m<nrow(feature)){
data=feature_shuffle[(m+1):min(m+N,nrow(feature)),]
m=m+N
temp=knn.impute(data,k=5,cat.var=cat_index,to.impute=1:nrow(data),using=1:nrow(data))
feature_impute=rbind(feature_impute,temp)
}
feature_impute=cbind(id_target_shuffle,feature_impute)
write.csv(feature_impute,'trainset_impute.csv',row.names = F)
set.seed(867)
new_index=sample(1:nrow(feature),nrow(feature),replace=F)
feature_shuffle=feature[new_index,]
id_target_shuffle=id_target[new_index,]
feature_impute=c()
N=50000
m=0
while (m<nrow(feature)){
data=feature_shuffle[(m+1):min(m+N,nrow(feature)),]
m=m+N
temp=knn.impute(data,k=5,cat.var=cat_index,to.impute=1:nrow(data),using=1:nrow(data))
feature_impute=rbind(feature_impute,temp)
}
trainset_impute=cbind(id_target_shuffle,feature_impute)
write.csv(trainset_impute,'trainset_impute.csv',row.names = F)
